name: unified_backend

volumes:
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs

services:
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - kong
    restart: on-failure

  kong_migrations:
    image: kong:latest
    command: kong migrations bootstrap
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    networks:
      - main-net
    restart: on-failure
  
  kong-migrations-up:
    image: kong:latest
    command: kong migrations up && kong migrations finish
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    networks:
      - main-net
    restart: on-failure

  kong:
    image: kong:latest
    user: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_ADMIN_GUI_LISTEN: "0.0.0.0:8002"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: /var/run/kong
    networks:
      - main-net
    ports:
      - "0.0.0.0:8000:8000/tcp"
      - "0.0.0.0:8443:8443/tcp"
      - 8001:8001
      - 8444:8444
      - 8002:8002
      - 8445:8445
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:/var/run/kong
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
    security_opt:
      - no-new-privileges
  
  db:
    image: postgres:latest
    networks:
      - main-net
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    restart: on-failure
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - /home/anirudh/kong_data:/var/lib/postgresql/data

  pocketbase:
    image: alpine
    working_dir: /app
    volumes:
      - ./pocketbase/pb_data:/app/pb_data
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "wget https://github.com/pocketbase/pocketbase/releases/download/v0.21.2/pocketbase_0.21.2_linux_amd64.zip -O pb.zip && \
      unzip pb.zip && \
      chmod +x pocketbase && \
      ./pocketbase serve --http=0.0.0.0:8090"
    ports:
      - "8090:8090"

  rabbitmq:
    image: rabbitmq:alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5

  service-runner:
    build: ./service-runner
    environment:
      - POCKETBASE_URL=http://pocketbase:8090
    ports:
      - "5000:5000"
    depends_on:
      - pocketbase

  stream-router:
    build: ./stream-router
    environment:
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      - rabbitmq

  stream-dealer:
    build: ./stream-dealer
    environment:
      - RABBITMQ_URL=amqp://rabbitmq
      - POCKETBASE_URL=http://pocketbase:8090
    depends_on:
      - rabbitmq
      - pocketbase

  ub-core:
    build: ./ub-core
    ports:
      - "3000:3000"
    environment:
      - POCKETBASE_URL=http://pocketbase:8090
    depends_on:
      - pocketbase
